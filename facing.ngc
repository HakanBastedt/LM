
;[${face.x-f}]
;[${face.sf-f}]
;[${face.cut-f}]
;[${face.feed-f}]
;[${face.z-f}]
;[${face.angle-s}]
;[${face.tool-s}]
;[${face.maxrpm-f}]
;[${face.nr-f}]

;Facing in diameter mode

O<facing> sub

#<diameter>      = #1
#<surface_speed> = #2
#<depth_of_cut>  = #3
#<feed>          = #4
#<end_z>         = #5
#<angle>         = #6
#<tool>          = #7
#<maxrpm>        = #8
#<nose_radius>   = #9
;(DEBUG, 1=#1 2=#2 3=#3 4=#4 5=#5 6=#6 7=#7 8=#8 9=#9)

G7                                     ; Diameter mode
G18                                    ; XZ Plane
G90                                    ; Absolute Distance
G91.1                                  ; Incremental arc distance mode, for I K

G40                                    ; Cancel compensation
M6 T#<tool>                            ; Load tool with possibly new values
G43                                    ; Tool compensate

#<start_x> = [2*#<_x>]                 ; Starting X
#<start_z> = #<_z>                     ; Starting Z

; Final coordinates without nose radius but with angle.
#<X0A> = #<start_x>
#<Z0A> = #<end_z>
#<X1A> = #<start_x>
#<Z1A> = #<end_z>
#<X2A> = #<diameter>
#<Z2A> = [#<end_z> + [#<start_x> - #<diameter>]/2.0*tan[#<angle>]]
;(DEBUG, X0A=#<X0A> Z0A=#<Z0A> X1A=#<X1A> Z1A=#<Z1A> X2A=#<X2A> Z2A=#<Z2A>)

; Offset from a square tool to the contactpoint on a round tool.
#<Dx> = [2*#<nose_radius>*[1-sin[#<angle>]]]
#<Dz> = [#<nose_radius>*[1-tan[#<angle>/2]]*tan[#<angle>]]
;(DEBUG, Dx=#<Dx>  Dz=#<Dz>)

; Coordinates with nose radius and straight part with angle.
#<X0N> = #<X0A>
#<Z0N> = [#<Z0A> - #<Dz>]
#<X1N> = #<X1A>
#<Z1N> = [#<Z1A> - #<Dz>] 
#<X2N> = #<X2A>
#<Z2N> = [#<Z2A> - #<Dz>]
#<X3N> = #<X2N>
#<Z3N> = [#<Z2N> + #<depth_of_cut>]
;(DEBUG, X0N=#<X0N> Z0N=#<Z0N> X1N=#<X1N> Z1N=#<Z1N> X2N=#<X2N> Z2N=#<Z2N> X3N=#<X3N> Z3N=#<Z3N>)

G96 D#<maxrpm> S#<surface_speed>      ; Constant Surface Speed Mode
m3                                    ; Start Spindle
g95                                   ; Feed-Per-Rev Mode
G1 F#<feed>
G64 P0.01

#<diff_z> = [#<start_z> - #<end_z> - #<depth_of_cut>]

; Multple steps to come to dimension is here
O100 WHILE [#<diff_z> GT 0]
    G1 X#<X0N> Z[#<Z0N> + #<diff_z>]              ; Point 0
    G1 X#<X1N> Z[#<Z1N> + #<diff_z>]              ; Point 1
    G1 X#<X2N> Z[#<Z2N> + #<diff_z>]              ; Point 2
    G1 Z[#<Z3N> + #<diff_z> + #<depth_of_cut>]
    O102 IF [#<angle> LT 0]
        G0 X#<X1N> Z[#<Z1N> + #<diff_z> + 5*#<depth_of_cut>]  ; Avoid gouging
    O102 ENDIF
    G0 X#<X0N> Z[#<Z0N> + #<diff_z> + 2*#<depth_of_cut>]
    #<diff_z> = [#<diff_z> - #<depth_of_cut>]
O100 ENDWHILE

; Final cut or spring cut. Always do this part. 
G1 X#<X0N> Z#<Z0N>                            ; Point 0
G1 X#<X1N> Z#<Z1N>                            ; Point 1
G1 X#<X2N> Z#<Z2N>                            ; Point 2
G1 X[#<X3N> + #<depth_of_cut>]
O202 IF [#<angle> LT 0]
    G0 X#<X1N> Z[#<Z1N> + 5*#<depth_of_cut>]  ; Avoid gouging
O202 ENDIF
G0 X#<X0N> Z[#<Z0N> + 2*#<depth_of_cut>]

G0 Z#<end_z>                                  ; For touch-off

M5
G7
O<facing> endsub
M2

