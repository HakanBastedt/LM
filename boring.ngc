;Boring in diameter mode

O<boring> sub

#<diameter>      = #1
#<surface_speed> = #2
#<maxrpm>        = #3
#<depth_of_cut>  = #4
#<feed>          = #5
#<end_z>         = #6
#<radius>        = #7
#<angle>         = #8
#<tool>          = #9
#<nose_radius>   = #10
;(DEBUG, 1=#1 2=#2 3=#3 4=#4 5=#5 6=#6 7=#7 8=#8 9=#9 10=#10 Feed=#<feed>)

G7                                     ; Diameter mode
G18                                    ; XZ Plane
G90                                    ; Absolute Distance
G91.1                                  ; Incremental arc distance mode, for I K

G40                                    ; Cancel compensation
M6 T#<tool>                            ; Load tool with possibly new values
G43                                    ; Tool compensate

#<start_x> = [2*#<_x>]                 ; Starting X
#<start_z> = #<_z>                     ; Starting Z

O1 IF [#<nose_radius> GT #<radius>]
  #<radius> =  [#<nose_radius> + 0.01] ; Cannot be equal, just a tad larger works.
O1 ENDIF

O2 IF [#<radius>*[1-sin[#<angle>]] GT [#<start_z> - #<end_z>]]
   (DEBUG, Corner radius too large. Fix!)
   o<boring> return
O2 ENDIF

; Coordinates without nose radius but with angle.
; A is helper dimension: Z-distance of straight part with angle
#<A> = [#<start_z> - #<end_z> - #<radius>*[1-sin[#<angle>]]]
#<X0A> = #<diameter>
#<Z0A> = #<start_z>
#<X1A> = #<diameter>
#<Z1A> = #<start_z>
#<X2A> = [#<diameter> - 2*#<A>*tan[#<angle>]]
#<Z2A> = [#<end_z> + #<radius>*[1-sin[#<angle>]]]
#<X3A> = [#<diameter> - 2*#<A>*tan[#<angle>] - 2*#<radius>*cos[#<angle>]]
#<Z3A> = #<end_z>
#<G2IA>= [2*#<radius>*cos[#<angle>]]
#<G2KA>= [-#<radius>*sin[#<angle>]]
;(DEBUG, A=#<A> X0A=#<X0A> Z0A=#<Z0A> X1A=#<X1A> Z1A=#<Z1A> X2A=#<X2A> Z2A=#<Z2A> X3A=#<X3A> Z3A=#<Z3A> )

; Offset from a square tool to the contactpoint on a round tool.
#<Dx> = [2*#<nose_radius>*[1-cos[#<angle>]]]
#<Dz> = [#<nose_radius>*[1-sin[#<angle>]]]
;(DEBUG, Dx=#<Dx>  Dz=#<Dz>)

; Coordinates with nose radius and straight part with angle.
#<X0N> = [#<X0A> + #<Dx>]
#<Z0N> = #<Z0A>
#<X1N> = [#<X1A> + #<Dx>]
#<Z1N> = [#<Z1A> - #<Dz>] 
#<X2N> = [#<X2A> + #<Dx>]
#<Z2N> = [#<Z2A> - #<Dz>]
#<X3N> = [#<X3A> + 2*#<nose_radius>]
#<Z3N> = #<end_z>
#<X4N> = [#<X3N> - 2*#<depth_of_cut>]
#<Z4N> = #<end_z>
#<G3IN> = [[-#<radius>+#<nose_radius>]*cos[#<angle>]]
#<G3KN> = [[#<radius>-#<nose_radius>]*sin[#<angle>]]
(DEBUG, X0N=#<X0N> Z0N=#<Z0N> X1N=#<X1N> Z1N=#<Z1N> X2N=#<X2N> Z2N=#<Z2N> X3N=#<X3N> Z3N=#<Z3N> G3IN=#<G3IN> G3KN=#<G3KN>)

G96 D#<maxrpm> S#<surface_speed>      ; Constant Surface Speed Mode
m3                                    ; Start Spindle
g95                                   ; Feed-Per-Rev Mode
G1 F#<feed>

#<diff_x> = [#<diameter> - #<start_x> - 2*#<depth_of_cut>]

; Multple steps to come to dimension is here
O100 WHILE [#<diff_x> GT 0]
    G1 X[#<X0N> - #<diff_x>] Z#<Z0N>          ; Point 0
    G1 X[#<X1N> - #<diff_x>] Z#<Z1N>          ; Point 1
    G1 X[#<X2N> - #<diff_x>] Z#<Z2N>          ; Point 2
    O101 IF [#<radius> GT 0]
        G3 X[#<X3N> - #<diff_x>] Z#<Z3N> I#<G3IN> K#<G3KN>	    
    O101 ENDIF
    G1 X[#<X4N> - #<diff_x>] Z#<Z4N>
    O102 IF [#<angle> LT 0]
        G0 X[#<X1N> - #<diff_x> - 5*#<depth_of_cut>] Z#<Z1N>    ; Avoid gouging
    O102 ENDIF
    G0 X[#<X0N> - #<diff_x> - 2*#<depth_of_cut>] Z#<start_z>
    #<diff_x> = [#<diff_x> - 2*#<depth_of_cut>]
O100 ENDWHILE

; Final cut or spring cut. Always do this part. 
G1 X#<X0N> Z#<Z0N>                            ; Point 0
G1 X#<X1N> Z#<Z1N>                            ; Point 1
G1 X#<X2N> Z#<Z2N>                            ; Point 2
O201 IF [#<radius> GT 0]
    G3 X#<X3N> Z#<Z3N> I#<G3IN> K#<G3KN>	    
O201 ENDIF
G1 X[#<X4N> - 2*#<depth_of_cut>]  Z#<Z4N>
O202 IF [#<angle> LT 0]
    G0 X[#<X1N> - 5*#<depth_of_cut>] Z#<Z1N>  ; Avoid gouging
O202 ENDIF
G0 X[#<X0N> - 2*#<depth_of_cut>] Z#<Z0N>

G0 X #<diameter>                               ; For touch-off

M5
G7
O<boring> endsub
M2
